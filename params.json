{"name":"Malone","tagline":"Simple ruby mailing solution which always delivers.","body":"malone(1) -- send mail using smtp without any fuss\r\n==================================================\r\n\r\n## USAGE\r\n\r\n    require \"malone\"\r\n\r\n    # Typically you would do this somewhere in the bootstrapping\r\n    # part of your application\r\n\r\n    m = Malone.connect(url: \"smtp://foo%40bar.com:pass@smtp.gmail.com:587\",\r\n                       domain: \"mysite.com\")\r\n\r\n    m.deliver(from: \"me@me.com\", to: \"you@me.com\",\r\n              subject: \"Test subject\", text: \"Great!\")\r\n\r\n    # Malone.current will now remember the last configuration you setup.\r\n    Malone.current.config == m.config\r\n\r\n    # Now you can also do Malone.deliver, which is syntactic sugar\r\n    # for Malone.current.deliver\r\n    Malone.deliver(from: \"me@me.com\", to: \"you@me.com\",\r\n                   subject: \"Test subject\", text: \"Great!\")\r\n\r\n    # Also starting with Malone 1.0, you can pass in :html\r\n    # for multipart emails.\r\n\r\n    Malone.deliver(from: \"me@me.com\", to: \"you@me.com\",\r\n                   subject: \"Test subject\",\r\n                   text: \"Great!\", html: \"<b>Great!</b>\")\r\n\r\n\r\n## TESTING\r\n\r\n    require \"malone/test\"\r\n\r\n    m = Malone.connect(url: \"smtp://foo%40bar.com:pass@smtp.gmail.com:587\",\r\n                       domain: \"mysite.com\")\r\n\r\n    m.deliver(from: \"me@me.com\", to: \"you@me.com\",\r\n              subject: \"Test subject\", text: \"Great!\")\r\n\r\n    Malone.deliveries.size == 1\r\n    # => true\r\n\r\n    mail = Malone.deliveries.first\r\n\r\n    \"me@me.com\" == mail.from\r\n    # => true\r\n\r\n    \"you@me.com\" == mail.to\r\n    # => true\r\n\r\n    \"FooBar\" == mail.text\r\n    # => true\r\n\r\n    \"Hello World\" == envelope.subject\r\n    # => true\r\n\r\n## INSTALLATION\r\n\r\n    gem install malone\r\n\r\n## CONFIGURATION TIPS\r\n\r\nIf you're used to doing configuration via environment\r\nvariables, similar to how Heroku does configuration, then\r\nyou can simply set an environment variable in your\r\nproduction machine like so:\r\n\r\n    export MALONE_URL=smtp://foo%40bar.com:pass@smtp.gmail.com:587\r\n\r\nThen you can connect using the environment variable in your\r\ncode like so:\r\n\r\n    Malone.connect(url: ENV[\"MALONE_URL\"])\r\n\r\n    # or quite simply\r\n    Malone.connect\r\n\r\nBy default Malone tries for the environment variable `MALONE_URL` when\r\nyou call `Malone.connect` without any arguments.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}